<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/task
   http://www.springframework.org/schema/task/spring-task-3.2.xsd
	">
	<import resource="job-manager.xml" />

	<batch:job id="job">

		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="itemReader" processor="customItemProcessor"
					writer="xmlItemWriter" commit-interval="1"></batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="customItemProcessor" class="main.java.CustomItemProcessor">

	</bean>
	<!-- item reader, read database in mysql The datasource is set at the job-manager.xml 
		users table must be created first -->
	<bean id="itemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />
		<property name="sql" value="select id, name, password, age from users" />
		<property name="rowMapper">
			<bean class="main.java.UserRowMapper" />
		</property>
	</bean>

	<!-- Item writer: write to xml file -->
	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:xml/output/users.xml" />
		<!-- A way to write data -->
		<property name="marshaller" ref="userMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>

	<!--Marshalling: map an object to xml http://codereq.com/marshalling-and-unmarshalling-xml-using-spring/ -->
	<bean id="userMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<!-- specify which class is to be used for mapping XML to class. -->
		<property name="classesToBeBound">
			<list>
				<value>main.java.User</value>
			</list>
		</property>
	</bean>

	<!-- Scheduler -->
	<bean id="runScheduler" class="main.java.RunScheduler">
	</bean>
	<task:scheduled-tasks>
		<task:scheduled ref="runScheduler" method="run"
			cron="*/5 * * * * *" />
	</task:scheduled-tasks>


</beans>
